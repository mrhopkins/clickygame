{"version":3,"sources":["images/candyman.jpg","images/chucky.jpg","images/damien.jpg","images/freddy.jpg","images/ghostface.jpg","images/hannibal.jpg","images/jason.jpg","images/leatherface.jpg","images/michael.jpg","images/pennywise.png","images/pinhead.jpg","images/regan.jpg","components/Navbar/Navbar.js","components/Character/Character.js","components/Container/Container.js","components/Footer/Footer.js","components/Banner/Banner.js","images.js","components/ClickyGame.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","navMsgColor","navMessage","style","color","score","highScore","Character","onClick","e","clickEvent","target","src","name","alt","Container","shake","characters","map","i","components_Character_Character","key","Footer","Banner","images","candyman","chucky","damien","freddy","ghostface","hannibal","jason","leatherface","michael","pennywise","pinhead","regan","ClickyGame","state","allCharacters","_this","shuffleArray","wasClicked","checkClicked","bind","Object","assertThisInitialized","newArr","slice","shuffleArr","length","push","splice","Math","floor","random","clickedElem","_this2","this","prevState","shuffled","includes","setState","setTimeout","components_Navbar_Navbar","components_Banner_Banner","components_Container_Container","components_Footer_Footer","Component","ReactDOM","render","components_ClickyGame","document","getElementById"],"mappings":"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","file":"static/js/main.80966121.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/candyman.ac08e281.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chucky.1c8258c2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/damien.b1b66dde.jpg\";","module.exports = __webpack_public_path__ + \"static/media/freddy.7bb361da.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ghostface.b83cad3b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hannibal.6dea1f65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jason.fee01341.jpg\";","module.exports = __webpack_public_path__ + \"static/media/leatherface.81001856.jpg\";","module.exports = __webpack_public_path__ + \"static/media/michael.26fe2fde.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pennywise.a6cb4199.png\";","module.exports = __webpack_public_path__ + \"static/media/pinhead.1d3cece2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/regan.2c3ae446.jpg\";","import React from 'react';\nimport './Navbar.css';\n\nconst Navbar = props => (\n  <div className=\"navbar \">\n    <div>Horror Clicky Game</div>\n    <div className={props.navMsgColor}>{props.navMessage}</div>\n    <div>\n      Score: <span style={{ color: \"yellow\" }}>{props.score}</span> Top Score: {props.highScore}\n    </div>\n  </div>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport './Character.css';\n\n// the onClick function is defined as a callback so that the clicked elements value\n// can be passed to props.clickEvent to check if the image has been clicked or not\nconst Character = props => (\n  <div className=\"card\" onClick={e => props.clickEvent(e.target.src)}>\n    <img className=\"card-img-top card-height\" src={props.name} alt=\"\" />\n  </div>\n);\n\nexport default Character;\n","import React from 'react';\nimport './Container.css';\nimport Character from '../Character';\n\n// main container for each Character component\n// loops through each index in props.characters, which contains an array of character images\n// to create a new Character component for each image\n// attaches the passed down clickEvent function to each Character component\nconst Container = props => (\n  // loops through\n  <div\n    className={\n      props.shake\n        ? 'container d-flex flex-wrap justify-content-center shake'\n        : 'container d-flex flex-wrap justify-content-center'\n    }\n  >\n    {props.characters.map((a, i) => <Character name={a} key={i} clickEvent={props.clickEvent} />)}\n  </div>\n);\n\nexport default Container;\n","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => <div className=\"footer text-center\">Horror Clicky Game</div>;\n\nexport default Footer;\n","import React from 'react';\nimport './Banner.css';\n\nconst Banner = () => (\n  <div className=\"banner\">\n    <h1>Horror Clicky Game</h1>\n    <p>Click on an image to earn points, but don't click on any more than once!</p>\n  </div>\n\n  // <div className=\"banner text-center d-flex align-items-center justify-content-center\">\n  //   <p className=\"m-0\">Click on an image to earn points, but don't click on any more than once!</p>\n  // </div>\n);\n\nexport default Banner;\n\n\n\n\n","import candyman from './images/candyman.jpg';\nimport chucky from './images/chucky.jpg';\nimport damien from './images/damien.jpg';\nimport freddy from './images/freddy.jpg';\nimport ghostface from './images/ghostface.jpg';\nimport hannibal from './images/hannibal.jpg';\nimport jason from './images/jason.jpg';\nimport leatherface from './images/leatherface.jpg';\nimport michael from './images/michael.jpg';\nimport pennywise from './images/pennywise.png';\nimport pinhead from './images/pinhead.jpg';\nimport regan from './images/regan.jpg';\n\nconst images = [\n  candyman,\n  chucky,\n  damien,\n  freddy,\n  ghostface,\n  hannibal,\n  jason,\n  leatherface,\n  michael,\n  pennywise,\n  pinhead,\n  regan\n];\n\nexport default images;\n","import React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport Container from './Container';\nimport Footer from './Footer';\nimport Banner from './Banner';\nimport images from '../images';\n\nclass ClickyGame extends Component {\n  state = {\n    score: 0,\n    highScore: 0,\n\n    // stores the class value to assign to navMessage based on a good or bad click\n    navMsgColor: '',\n\n    // contains intro, success, and failure message\n    navMessage: 'Click an image to begin!',\n\n    // contains an array of image urls\n    allCharacters: this.shuffleArray(),\n\n    // will track  each clicked element.\n    wasClicked: [],\n\n    // shakes the container on an incorrect guess if set to true\n    shake: false\n  };\n\n  // binds the current this context to checkClicked to have access to the current state\n  // when passed down to the Character component\n  clickEvent = this.checkClicked.bind(this);\n\n  // used to shuffle the array of images when the DOM loads, and when an image is clicked\n  shuffleArray() {\n    // creates a copy of the current characters array to modify it by value, and not by reference\n    const newArr = images.slice();\n\n    // will store the shuffled array\n    const shuffleArr = [];\n\n    // each loop through an index gets spliced from newArr, reducing its length\n    // gets a random index based off the current length of newArr\n    // splices the value from newArr, and pushes it to shuffleArr\n    while (newArr.length > 0) {\n      shuffleArr.push(newArr.splice(Math.floor(Math.random() * newArr.length), 1)[0]);\n    }\n\n    return shuffleArr;\n  }\n\n  checkClicked(clickedElem) {\n    // creates a copy of the wasClicked array to modify it by value, and not by reference. wasClicked stores all previous clicked images\n    const prevState = this.state.wasClicked.slice();\n\n    // shuffles the images\n    const shuffled = this.shuffleArray();\n\n    // tracks score\n    let score = this.state.score;\n    let highScore = this.state.highScore;\n\n    // if the clicked item is not in wasClicked, then it hasn't been clicked and the score is increased\n    if (!this.state.wasClicked.includes(clickedElem)) {\n      // if score and highScore are the same, then there is a new highScore value\n      if (score === highScore) {\n        score++;\n        highScore++;\n\n        // if they are not equal, then only increase the score value\n      } else {\n        score++;\n      }\n\n      // adds the clicked item to wasClicked to track that it has been clicked\n      prevState.push(clickedElem);\n    }\n\n    // resets the current score if the same element was clicked twice\n    if (this.state.wasClicked.includes(clickedElem)) {\n      let score = 0;\n      return this.setState({\n        score: score,\n        highScore: highScore,\n        navMsgColor: 'incorrect',\n        navMessage: 'You Guessed Incorrectly!',\n        allCharacters: shuffled,\n        wasClicked: [],\n        shake: true\n      });\n    }\n\n    // if this runs, then the same element has not been clicked twice and the score is increased\n    this.setState({\n      score: score,\n      highScore: highScore,\n      navMsgColor: 'correct',\n      navMessage: 'You Guessed Correctly!',\n      allCharacters: shuffled,\n      wasClicked: prevState,\n      shake: false\n    });\n\n    // removes the green correct indicator on a successful click after .5s to re-render the class on each success\n    return setTimeout(() => this.setState({ navMsgColor: '' }), 500);\n  }\n\n  // renders score to the navbar.\n  // passes the randomized state.allCharacters array to Container to create a Character component for each image.\n  // passes the this.checkClicked down to container to pass to each Character component to be used for the click event.\n  render() {\n    const state = this.state;\n    return (\n      <div>\n        <Navbar\n          score={state.score}\n          highScore={state.highScore}\n          navMessage={state.navMessage}\n          navMsgColor={state.navMsgColor}\n        />\n        <Banner />\n        <Container\n          shake={state.shake}\n          characters={state.allCharacters}\n          clickEvent={this.clickEvent}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default ClickyGame;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ClickyGame from './components/ClickyGame';\nimport './index.css';\n\nReactDOM.render(<ClickyGame />, document.getElementById('root'));\n"],"sourceRoot":""}